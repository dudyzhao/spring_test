import javax.tools.JavaCompiler
buildscript {
    repositories {
        mavenLocal()
        maven { url 'http://localhost:8081/repository/maven-public/' }
        mavenCentral()
    }
    ext {
        springBootVersion = '2.2.2.RELEASE'
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
apply plugin:'java'
apply plugin:'maven'

group = 'com.springboot'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
// 配置全局变量
allprojects {
    /**
     * 指定所使用的仓库，mavenCentral()表示使用中央仓库，
     * 此刻项目中所需要的jar包都会默认从中央仓库下载到本地指定目录
     * 配置mavenLocal()表示引入jar包的时候，先从本地仓库中找，没有再去中央仓库下载
     * maven{ url ''} 指定私服地址或其他中央仓库
     */
    repositories {
        mavenLocal()
        maven { url 'http://localhost:8081/repository/maven-public/' }
        mavenCentral()
    }

    tasks.withType(JavaCompiler){
        options.encoding = "UTF-8"
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    test {
        useJUnitPlatform()
    }

    /**
     * 发布到maven仓库
     */
    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: "http://localhost:8081/repository/maven-public/")
            }
        }
    }
}

/**
 * gradle工程中所有的jar包的坐标都在dependencies属性内放置
 * 每一个jar包的坐标都有三个基本元素组成
 * group , name , version
 * testCompile 表示该jar包在测试的时候起作用，该属性为jar包的作用域
 * compileOnly 表示只有编译时使用
 * 我们在gradle里面添加坐标的时候都要带上jar包的作用域
 */
dependencies {
    compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.4.7'
    compile 'commons-io:commons-io:2.3'
    compile 'commons-lang:commons-lang:2.3'
    compile 'org.springframework.boot:spring-boot-autoconfigure:2.2.2.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.5.2'
    testCompile group: 'junit', name: 'junit', version: '4.12'

    annotationProcessor 'org.projectlombok:lombok:1.18.2'
    compileOnly 'org.projectlombok:lombok:1.18.2'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.2'
    testCompileOnly 'org.projectlombok:lombok:1.18.2'
}